# Cloud Native API Project

## Descrição do Projeto

Este projeto desenvolve uma **API em .NET** utilizando práticas modernas de **Cloud Native**, **DevOps** e **observabilidade** no **Azure**.

O projeto inclui:

* API .NET containerizada.
* Deploy em **Azure Kubernetes Service (AKS)**.
* Armazenamento das imagens Docker no **Azure Container Registry (ACR)**.
* Provisionamento da infraestrutura com **Terraform**.
* Pipeline de **CI/CD** com **GitHub Actions**.
* Monitoramento com **Prometheus** e **Grafana** em contêineres separados.

---

## Arquitetura

```text
   +--------------------+       +--------------------+
   |    .NET API        |       |   Prometheus       |
   |  (Container)       |       |  (Container)       |
   +--------+-----------+       +---------+----------+
            |                             |
            v                             v
       +-----------------------------------------+
       |       AKS Cluster (Azure)               |
       |                                         |
       |   +----------------+  +----------------+|
       |   |  Grafana       |  |  Application   ||
       |   | (Container)    |  |    Containers  ||
       +-----------------------------------------+
                     |
                     v
             +----------------+
             | Azure Container|
             |    Registry    |
             +----------------+
```

---

## Tecnologias e Ferramentas

* **Backend:** .NET API
* **Containerização:** Docker
* **Orquestração:** Azure Kubernetes Service (AKS)
* **Registro de Imagens:** Azure Container Registry (ACR)
* **Infraestrutura como Código:** Terraform
* **CI/CD:** GitHub Actions
* **Monitoramento:** Prometheus + Grafana

---

## Estrutura do Repositório

```
/project-root
│
├─ /dotnet-api         # Código da API .NET
├─ /terraform          # Scripts Terraform para AKS, ACR, RBAC
├─ /docker             # Dockerfiles para API, Prometheus e Grafana
├─ .github/workflows   # Pipelines GitHub Actions
└─ README.md           # Documentação do projeto
```

---

## Funcionalidades

1. **API .NET**

   * Containerizada para deploy simplificado em AKS.
   * Configuração de ambiente via variáveis de ambiente no Kubernetes.

2. **Infraestrutura**

   * Provisionada com **Terraform**: AKS, ACR, namespaces e roles.
   * Reproduzível, versionada e automatizada.

3. **CI/CD**

   * GitHub Actions builda, testa e envia imagens para ACR.
   * Faz deploy automático no cluster AKS.

4. **Monitoramento**

   * **Prometheus:** coleta métricas de pods e aplicações.
   * **Grafana:** dashboards customizados com métricas de performance e disponibilidade.

---

## Como Rodar

### 1. Clone o repositório

```bash
git clone https://github.com/seu-usuario/cloud-native-api.git
cd cloud-native-api
```

### 2. Provisionar infraestrutura com Terraform

```bash
cd terraform
terraform init
terraform apply
```

### 3. Build e push das imagens Docker para ACR

```bash
cd ../docker/dotnet-api
docker build -t <ACR_NAME>.azurecr.io/dotnet-api:latest .
docker push <ACR_NAME>.azurecr.io/dotnet-api:latest
```

Repita para **Prometheus** e **Grafana**.

### 4. Deploy no AKS

* Atualize os manifests Kubernetes (`.yaml`) com a imagem correta e aplique:

```bash
kubectl apply -f k8s/
```

### 5. Acessar Grafana

* Obtenha o **NodePort ou ingress URL** do Grafana para visualizar dashboards.

---

## Boas Práticas Aplicadas

* Serviços isolados em contêineres separados (API, Prometheus, Grafana).
* Infraestrutura gerenciada como código (Terraform).
* CI/CD automatizado via GitHub Actions.
* Observabilidade completa com métricas e dashboards.
* Deploy escalável e reproduzível usando AKS.
